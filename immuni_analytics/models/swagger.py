#   Copyright (C) 2020 Presidenza del Consiglio dei Ministri.
#   Please refer to the AUTHORS file for more information.
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as
#   published by the Free Software Foundation, either version 3 of the
#   License, or (at your option) any later version.
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU Affero General Public License for more details.
#   You should have received a copy of the GNU Affero General Public License
#   along with this program. If not, see <https://www.gnu.org/licenses/>.

from sanic_openapi import doc


class AuthorizationBody:
    """
    Doc model for the token authorization request body.
    """

    analytics_token = doc.String(
        "The analytics_token to authorize for the operational_info uploads.",
    )
    device_token = doc.String("The device token to check against Apple DeviceCheck.")


class AppleOperationalInfo:
    """
    Doc model for the operational info upload request body.
    """

    province = doc.String("The user's province of residence.")
    exposure_permission = doc.Integer(
        "Whether the user has granted the App permission to use the Exposure Notifications "
        "framework. Without this permission the App won’t work."
    )
    bluetooth_active = doc.Integer(
        "Whether the user has Bluetooth turned on. If Bluetooth is turned off, the App won’t work."
    )
    notification_permission = doc.Integer(
        "Whether the user has granted the App permission to display notifications. "
        "This is helpful to warn the user about an app malfunction, but it is not "
        "strictly necessary to receive exposure notifications."
    )
    exposure_notification = doc.Integer(
        "Whether the user was notified of a Risky Exposure after the last Exposure Detection."
    )
    last_risky_exposure_on = doc.Date(
        "The date on which the last Risky Exposure took place, if any."
    )


class GoogleOperationalInfo(AppleOperationalInfo):
    """
    Doc model for the operational info upload request body sent by Android devices (google).
    """

    salt = doc.String("A random string sent by the client. Used to avoid replay attacks.")
    signed_attestation = doc.String("The payload generated by Google SafetyNet attestation API.")
